# -*- coding: utf-8 -*-
"""TMDb_Movie_Data_Investigate_a_Dataset_ 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1knxUBSLF2Y09VoruaO_VzWuI1AZ-xKKa

# Project: Investigate a Dataset (TMDb Movie Data!)

## Table of Contents
<ul>
<li><a href="#intro">Introduction</a></li>
<li><a href="#wrangling">Data Wrangling</a></li>
<li><a href="#eda">Exploratory Data Analysis</a></li>
<li><a href="#conclusions">Conclusions</a></li>
</ul>

<a id='intro'></a>
## Introduction

> IMDB Movies rates , I selected this data to know about the rating and genre of movies they are well liked. Since there's a budget factor I need to know is it because the movie is good or the budget making the movie good and how much their revunes, so I choose to do my investigation on IMDB movies. 
I need to understand the popularity of the movies based on what? 
 
The questions are already asked but I will clarify it again.
 
**First, What are the movies with high popularity? **
 
**Secondly , How Much their revenues  ? **
 
**Finally, How much their budget? **
"""

# Commented out IPython magic to ensure Python compatibility.
# I will use this cell to set up import all of the packages I need to use
import pandas as pd 
import numpy as np
import seaborn as sns 
import matplotlib.pyplot as plt
import matplotlib.dates as mdates

# % matplotlib inline

from google.colab import files # I used a method that I cau use it to upload the file 
uploaded = files.upload()

"""<a id='wrangling'></a>
## Data Wrangling


"""

# Load your data and print out a few lines. Perform operations to inspect data

imdb_df = pd.read_csv("tmdb-movies (1).csv" , sep=",")

imdb_df.head()

imdb_df.tail()

imdb_df.shape

imdb_df.dtypes

imdb_df.info()

#cleaned, perform those cleaning steps in the second part of this section.
duplicate_rows_df = imdb_df[imdb_df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

imdb_df.count()

df = imdb_df.drop_duplicates()
df.head(5)

df.count()

print(df.duplicated())

print(df.isnull().sum())

df = df.dropna() 
df.count()

print(df.isnull().sum())

sns.boxplot( x =df['revenue'])
plt.title('Revenue of the movies in total');

sns.boxplot(x=df['budget'])
plt.title('Budget for the movies in total!');

sns.boxplot(x=df['popularity'])

plt.title('Popularity of movies in general ! ');

sns.boxplot(x=df['vote_count'])
plt.title('Vote count !')

sns.boxplot(x=df['budget_adj'])
plt.title('Budget adjastive! ')

df.hist(figsize=(15, 15))

plt.show();

"""<a id='eda'></a>
## Exploratory Data Analysis



### Research Question 1 (What are the movies with high popularity?)
"""

p_df = df.sort_values('popularity' , ascending=False).head(n=10)

p_df['revenue(million)'] = p_df['revenue'].apply(lambda x : x//1000000) 

p_df['budget(million']= p_df['budget'].apply(lambda x : x//1000000) 

p_df[['genres' ,  'original_title', 'popularity', 'budget', 'revenue']]

# Use this, and more code cells, to explore your data. Don't forget to add
#   Markdown cells to document your observations and findings.
plt.figure(figsize=(12, 10))
ax = sns.barplot(y='original_title', x='popularity', data=p_df, order=p_df.sort_values('popularity', ascending=False).original_title, orient='h')

plt.title('Top 20 Most Popular Movies', fontsize=12)
plt.ylabel('')
plt.show()

"""```
Jurssica World is the most famous movie at this dataset as it shown graph above
```

**Research Question 2**
# `How much their revune?`
"""

highest_revenue_movies = df.sort_values('revenue', ascending=False).head(n=20)
highest_revenue_movies['revenue(million)'] = highest_revenue_movies['revenue'].apply(lambda x : x//1000000)    # revenue in millions
highest_revenue_movies['budget(million)'] = highest_revenue_movies['budget'].apply(lambda x : x//1000000)    # revenue in millions
highest_revenue_movies[['genres' ,  'original_title', 'popularity', 'budget(million)', 'revenue(million)']]

plt.figure(figsize=(9, 9))
ax = sns.barplot(y='original_title', x='revenue(million)', data=highest_revenue_movies, order=highest_revenue_movies.sort_values('revenue(million)', ascending=False).original_title)
plt.title('Top 20 High Revenue(million) Movies', fontsize=12)
plt.ylabel('')
plt.show()

"""`As it showes in the graph above Avatar has the most high rank revenue `

### **Research Question 3 ** (How Much their budget ?)
"""

highest_budget_movies = df.sort_values('budget', ascending=False).head(n=20)
highest_budget_movies['revenue(million)'] = highest_budget_movies['revenue'].apply(lambda x : x//1000000)    # revenue in millions
highest_budget_movies['budget(million)'] = highest_budget_movies['budget'].apply(lambda x : x//1000000)    # revenue in millions
highest_budget_movies[['genres', 'original_title',  'popularity',  'budget(million)', 'revenue(million)']].head()

plt.figure(figsize=(12, 10))
ax = sns.barplot(y='original_title', x='budget(million)', data=highest_budget_movies, order=highest_budget_movies.sort_values('budget(million)', ascending=False).original_title)

plt.title('Top 20 High Budget(million) Movies', fontsize=12)
plt.ylabel('')
plt.show()

"""As it showes in the graph above The worrie's way has the most high rank budget
 
"""



"""<a id='conclusions'></a>
## Conclusions

Since my analysis, it shows that a very high budget would help make it go huge or another successfulÂ for the movie. Since the budget is high, even higher revenue is given back. People love high-budget movies, so in my view, this is the reason to make it famous as my data showed

 I completely understand how money can be an incredible success factor.
The original characteristics were analyzed and included in the final budget, popularity and revenue analysis.


The limitations of the dataset are also in addition to the limitations found in the previous two studies. For instance, it is hard to understand and difficult to believe that all movies that have ever been released are included in this dataset. In this dataset, for example, there does not appear to be a way to differentiate revenues produced in the United States and revenues, among other limitations. the movies that beyoned overseas that has been created, this dataset omits others, in addition to the only success factors being sales and user ratings, such as what awards different movies might have accomplished, as well as several more limitations.
"""

